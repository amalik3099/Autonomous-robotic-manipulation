% Auto-generated by cameraCalibrator app on 26-Sep-2019
%-------------------------------------------------------


% load('calibrationSession.mat')
% cam = webcam();
% getCamToCheckerboard(cam, calibrationSession.CameraParameters);
% worldPoints = pointsToWorld(calibrationSession.CameraParameters,R,t,[126,156;60,425;302,265;481,159])

% R = T_cam_to_checker(1:3,1:3);
% t = T_cam_to_checker(1:3,4);
% worldPoints = pointsToWorld(cameraParams, R, t, YOUR_PIXEL_VALUES);


% Define images to process
imageFileNames = {
    './CalibrationImages/Image2.png',...
    './CalibrationImages/Image3.png',...
    './CalibrationImages/Image6.png',...
    './CalibrationImages/Image7.png',...
    './CalibrationImages/Image8.png',...
    './CalibrationImages/Image9.png',...
    './CalibrationImages/Image10.png',...
    './CalibrationImages/Image13.png',...
    './CalibrationImages/Image14.png',...
    './CalibrationImages/Image15.png',...
    './CalibrationImages/Image16.png',...
    './CalibrationImages/Image18.png',...
    './CalibrationImages/Image19.png',...
    './CalibrationImages/Image20.png',...
    './CalibrationImages/Image21.png',...
    './CalibrationImages/Image22.png',...
    './CalibrationImages/Image23.png',...
    './CalibrationImages/Image24.png',...
    './CalibrationImages/Image25.png',...
    './CalibrationImages/Image26.png',...
    './CalibrationImages/Image29.png',...
    };

% Detect checkerboards in images
[imagePoints, boardSize, imagesUsed] = detectCheckerboardPoints(imageFileNames);
imageFileNames = imageFileNames(imagesUsed);

% Read the first image to obtain image size
originalImage = imread(imageFileNames{1});
[mrows, ncols, ~] = size(originalImage);

% Generate world coordinates of the corners of the squares
squareSize = 12;  % in units of 'millimeters'
worldPoints = generateCheckerboardPoints(boardSize, squareSize);

% Calibrate the camera
[cameraParams, imagesUsed, estimationErrors] = estimateCameraParameters(imagePoints, worldPoints, ...
    'EstimateSkew', false, 'EstimateTangentialDistortion', false, ...
    'NumRadialDistortionCoefficients', 2, 'WorldUnits', 'millimeters', ...
    'InitialIntrinsicMatrix', [], 'InitialRadialDistortion', [], ...
    'ImageSize', [mrows, ncols]);

% View reprojection errors
%h1=figure; showReprojectionErrors(cameraParams);

% Visualize pattern locations
%h2=figure; showExtrinsics(cameraParams, 'CameraCentric');

% Display parameter estimation errors
%displayErrors(estimationErrors, cameraParams);

% For example, you can use the calibration data to remove effects of lens distortion.
undistortedImage = undistortImage(originalImage, cameraParams);

% See additional examples of how to use the calibration data.  At the prompt type:
% showdemo('MeasuringPlanarObjectsExample')
% showdemo('StructureFromMotionExample')
